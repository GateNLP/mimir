buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.6"
    }
}

version "6.3-SNAPSHOT"
group "uk.ac.gate"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"maven-publish"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "http://repo.gate.ac.uk/content/groups/public" }
}

grails {
    plugins {
        compile project(':mimir-web')
    }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile "org.grails.plugins:gsp"

    compile 'org.grails.plugins:grails-executor:0.4'
    compile 'org.grails.plugins:spring-security-core:3.2.0'
    compile 'org.apache.commons:commons-compress:1.1'

    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime 'org.hsqldb:hsqldb:2.2.9'
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.6"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

// Since the maven cache of plugins only works if the WAR is expanded, there's
// no point in making an executable WAR when we know it won't work properly.
bootRepackage {
  enabled = false
}

assets {
    // don't bother minifying JS as most of it has been minified by GWT already
    minifyJs = false
    minifyCss = true
}

publishing {
  publications {
    mavenWeb(MavenPublication) {
      from components.web

      // this code is copied from what the grails-plugin-publish Gradle plugin
      // does, we don't want to use that directly
      pom.withXml {
        Node pomNode = asNode()

        if(pomNode.dependencyManagement) {
          pomNode.dependencyManagement[0].replaceNode {}
        }

        pomNode.children().last() + {
          delegate.name "Mímir web application"
          delegate.description """\
            Reference Mímir host application, bundling the Mímir web application
            functionality from mimir-web with a simple authentication and authorization
            layer using three hard-coded usernames.  This is the application that
            is used for Mímir servers on cloud.gate.ac.uk
            """
          delegate.url "https://gate.ac.uk/mimir"

          delegate.developers {
            delegate.developer {
              delegate.id "gate-team"
              delegate.name "GATE Team"
              delegate.email "gate-developers@lists.sourceforge.net"
            }
          }

          delegate.licenses {
            delegate.license {
              delegate.name "GNU Lesser General Public License (LGPL), Version 3"
              delegate.url "http://www.gnu.org/licenses/lgpl.html"
              delegate.distribution "repo"
            }
          }
        }

        // remove dependencies that don't have a version
        pomNode.dependencies.dependency.findAll {
          it.version.text().isEmpty()
        }.each {
          it.replaceNode {}
        }
      }
    }
  }

  repositories {
    maven {
      url = "https://repo.gate.ac.uk/content/repositories/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'}"
      credentials {
        username(project.hasProperty('gate.repo.username') ? project.property('gate.repo.username') : System.getenv('GATE_REPO_USERNAME') ?: '')
        password(project.hasProperty('gate.repo.password') ? project.property('gate.repo.password') : System.getenv('GATE_REPO_PASSWORD') ?: '')
      }
    }
  }
}
