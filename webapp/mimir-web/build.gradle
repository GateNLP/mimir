buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.6"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
    }
}

version "6.1.1"
group "uk.ac.gate.mimir"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
//apply plugin:"org.grails.grails-plugin-publish"
apply plugin:'maven-publish'
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "http://repo.gate.ac.uk/content/groups/public" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile "org.grails.plugins:gsp"

    compile project(':mimir-web-ui')
    compile "com.google.gwt:gwt-servlet:2.6.0"

    // we don't want log4j as Spring Boot uses SLF4J-over-log4j instead
    def exclLog4j = {
      exclude group:'log4j'
      exclude group:'org.slf4j', module:'slf4j-log4j12'
    }

    compile("uk.ac.gate.mimir:mimir-core:6.1.1", exclLog4j)
    compile("uk.ac.gate.mimir:mimir-client:6.1.1", exclLog4j)
    compile("uk.ac.gate:gate-spring:8.6.1", exclLog4j)

    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.2"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.6"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails:grails-web-testing-support"
}


bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}
// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false

assets {
    packagePlugin = true
}


assets {
    minifyJs = false
    minifyCss = true
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java

      // this code is copied from what the grails-plugin-publish Gradle plugin
      // does, we don't want to use that directly
      pom.withXml {
        Node pomNode = asNode()

        if(pomNode.dependencyManagement) {
          pomNode.dependencyManagement[0].replaceNode {}
        }

        pomNode.children().last() + {
          delegate.name "Mímir web application core"
          delegate.description """\
            Grails plugin which implements the Mímir web application core functionality.
            Host applications such as mimir-cloud add additional functions such as
            authentication and security.
            """
          delegate.url "https://gate.ac.uk/mimir"

          delegate.developers {
            delegate.developer {
              delegate.id "gate-team"
              delegate.name "GATE Team"
              delegate.email "gate-developers@lists.sourceforge.net"
            }
          }

          delegate.licenses {
            delegate.license {
              delegate.name "GNU Lesser General Public License (LGPL), Version 3"
              delegate.url "http://www.gnu.org/licenses/lgpl.html"
              delegate.distribution "repo"
            }
          }
        }

        // remove dependencies that don't have a version
        pomNode.dependencies.dependency.findAll {
          it.version.text().isEmpty()
        }.each {
          it.replaceNode {}
        }
      }
    }
  }

  repositories {
    maven {
      url = "https://repo.gate.ac.uk/content/repositories/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'}"
      credentials {
        username project.hasProperty('gate.repo.username') ? project.property('gate.repo.username') : ''
        password project.hasProperty('gate.repo.password') ? project.property('gate.repo.password') : ''
      }
    }
  }
}
